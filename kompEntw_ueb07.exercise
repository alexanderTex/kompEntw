Augabe 7-1

a)  EL2.1, was zuvor JSP2.1 gewesen war, schlägt eine Brücke zwischen den EL's aus JSP2.0 und JSF1.0, da sie diese in sich vereint.

b)  Sie kann in unterschiedlichen Phasen des Lifecycles vom Controller abgearbeitet werden. Die Expression #{ myBean.myBeanPrope
rty } wird in der  Render-Response Phase des Lifecycles evaluiert und anschließend wird der Value als Outputtext gerendert.

c)  #{myBean.myBeanProperty} => Wenn man den Wert ohne Metadaten angebene will.
    <h:outputText value="#{myBean.myBeanProperty }" .../> => Hier können zu dem hinterlegten Wert Metadaten hinterlegt werden.

d)  Die p's in der Bean var werden von links nach rechts durchlaufen und p3, welcher ein Attribut oder eine Methode sein kann, wird aufgerufen.

e)  - Methodenaufruf
    - Attributbearbeitung
        - lesen
        - schreiben

f)  - Implicit Object sind "Umgebungsvariablen", die zum aktuellen Status ausgewertet werden können.

    - Die folgenden werden zur Verfügung gestellt:

        pageContext: The context for the JSP page. Provides access to various objects including:

        servletContext: The context for the JSP page’s servlet and any web components contained in the same application. See Accessing the Web Context.

        session: The session object for the client. See Maintaining Client State.

        request: The request triggering the execution of the JSP page. See Getting Information from Requests.

        response: The response returned by the JSP page. See Constructing Responses.

    In addition, several implicit objects are available that allow easy access to the following objects:

        param: Maps a request parameter name to a single value

        paramValues: Maps a request parameter name to an array of values

        header: Maps a request header name to a single value

        headerValues: Maps a request header name to an array of values

        cookie: Maps a cookie name to a single cookie

        initParam: Maps a context initialization parameter name to a single value

    Finally, there are objects that allow access to the various scoped variables described in Using Scope Objects.

        pageScope: Maps page-scoped variable names to their values

        requestScope: Maps request-scoped variable names to their values

        sessionScope: Maps session-scoped variable names to their values

        applicationScope: Maps application-scoped variable names to their values

g)  - Da die Werte mit NULL initialisiert werden, kann es dazu führen, dass wenn nach Werten gesucht wird, die nicht existieren, NULL als Rückgabewert ausgegeben werden.

h)  - Arithmetic: +, - (binary), *, / and div, % and mod, - (unary)

    - Logical: and, &&, or, ||, not, !

    - Relational: ==, eq, !=, ne, <, lt, >, gt, <=, ge, >=, le. Comparisons can be made against other values, or against boolean, string, integer, or floating point literals.

    - Conditional: A ? B : C. Evaluate B or C, depending on the result of the evaluation of A.

    - (Empty: The empty operator is a prefix operation that can be used to determine whether a value is null or empty.)

i)  - Falsche Verwendung der Operatoren
    - Nutzung der reservieten Worte (or, not, eq, ...)

j)  -

k)  - Tomcat 7.0 uses the Jasper 2 JSP Engine to implement the JavaServer Pages 2.2 specification.
